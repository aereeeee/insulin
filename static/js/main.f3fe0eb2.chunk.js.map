{"version":3,"sources":["asset/logo.png","components/Navigation/Navigation.js","components/Group/Scatter.js","components/CardHead/CardHead.js","components/Group/Group.js","components/Slider/EachSlider.js","components/Slider/SliderCtrl.js","components/Script/Script.js","components/Graph/Graph.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","Input","Navigation","react_default","a","createElement","className","src","logo","alt","placeholder","onSearch","value","console","log","style","width","Scatter","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextProps","nextState","prevProps","prevState","Component","CardHead","_ref","cardtitle","Option","Select","handleChange","concat","Group","rcmd","components_CardHead_CardHead","es_select","defaultValue","position","top","right","onChange","Group_Scatter","EachSlider","_this","sliderChange","setState","inputValue","state","eachrcmd","marks","0","20","_marks","defineProperty","_this$state","row","gutter","col","span","slider","min","max","input_number","formatter","title","SliderCtrl","map","v","idx","Fragment","Slider_EachSlider","Script","es_button","type","height","margin","fontWeight","Graph","_this$props","expect","es6","data","left","bottom","strokeDasharray","dataKey","interval","xAxisId","padding","axisLine","tickLine","tick","Graph_DateTick","stroke","strokeWidth","dot","r","DateTick","_this$props2","x","y","payload","transform","dy","textAnchor","fill","PureComponent","App","group","script","graph","person","selectGroup","e","target","selectPerson","Math","floor","random","time","newexpect","checkAt","sugar","graphChange","doPrescribe","searchPerson","justify","components_Navigation_Navigation","offset","components_Group_Group","components_Slider_SliderCtrl","components_Script_Script","components_Graph_Graph","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0YCIhCC,EAAWC,IAAXD,OAkBOE,EAjBI,WACf,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QAAQH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMC,IAAI,UAC5CN,EAAAC,EAAAC,cAACL,EAAD,CACIU,YAAY,2BACZC,SAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,IAC/BG,MAAO,CAAEC,MAAO,OAEpBb,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QAAhB,gDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,WAAhB,kDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAhB,oDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UAAhB,0EC4BGW,cA1CX,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACVH,sLAYgBO,kDAIJA,EAAWC,gDAIbD,EAAWC,+CAIZC,EAAWC,qFAS1B,OACIzB,EAAAC,EAAAC,cAAA,mBApCUwB,aCSPC,UARE,SAAAC,GAAiB,IAAfC,EAAeD,EAAfC,UACf,OACI7B,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,SAAU0B,MCA9BC,UAAWC,IAAXD,QACR,SAASE,EAAavB,GAClBC,QAAQC,IAAR,YAAAsB,OAAwBxB,IAE5B,IA2CeyB,EA3CD,SAAAN,GAAwB,IAAtBC,EAAsBD,EAAtBC,UAAWM,EAAWP,EAAXO,KACvB,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACZH,EAAAC,EAAAC,cAACkC,EAAD,CACAP,UAAWA,IAEX7B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAQC,aAAa,MAAM1B,MAAO,CAAEC,MAAO,IAAK0B,SAAS,WAAYC,IAAI,OAAQC,MAAM,QAAUC,SAAUV,GACvGhC,EAAAC,EAAAC,cAAC4B,EAAD,CAAQrB,MAAM,KAAd,iBACAT,EAAAC,EAAAC,cAAC4B,EAAD,CAAQrB,MAAM,KAAd,iBACAT,EAAAC,EAAAC,cAAC4B,EAAD,CAAQrB,MAAM,KAAd,iBACAT,EAAAC,EAAAC,cAAC4B,EAAD,CAAQrB,MAAM,KAAd,iBACAT,EAAAC,EAAAC,cAAC4B,EAAD,CAAQrB,MAAM,KAAd,iBACAT,EAAAC,EAAAC,cAAC4B,EAAD,CAAQrB,MAAM,KAAd,iBACAT,EAAAC,EAAAC,cAAC4B,EAAD,CAAQrB,MAAM,KAAd,kBAEJT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACyC,EAAD,CACIR,KAAOA,KAGfnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,gBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAhB,gBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,iBAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,2BAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,gCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAf,sECoBTyC,cA7DX,SAAAA,EAAY7B,GAAO,IAAA8B,EAAA,OAAA7B,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,IACfC,EAAA7B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,KAAAH,KAAMH,KAuBV2B,SAAW,SAAAjC,GACPoC,EAAK9B,MAAM+B,eACXD,EAAKE,SAAS,CACdC,WAAYvC,KAzBZoC,EAAKI,MAAQ,CACTD,WAAYH,EAAK9B,MAAMmC,SACvBC,MAAO,CACLC,EAAG,MACHF,SAAU,qBACVG,GAAI,SAPKR,yFAWOvB,gDAGN,IAAAgC,EACRJ,EAAahC,KAAKH,MAAlBmC,SACRhC,KAAK6B,SAAS,CACVI,OAAKG,EAAA,CACDF,EAAG,OADFpC,OAAAuC,EAAA,EAAAvC,CAAAsC,EAEAJ,EAAY,qBAAOA,GAFnBlC,OAAAuC,EAAA,EAAAvC,CAAAsC,EAGD,GAAI,QAHHA,sCAcJ,IAAAE,EACyBtC,KAAK+B,MAA3BD,EADHQ,EACGR,WAAYG,EADfK,EACeL,MACpB,OACAnD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAKC,OAAQ,IACT1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAKC,KAAM,IACX5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACIV,MAAOA,EACPb,aAAca,EAAMD,SACpBY,IAAK,EACLC,IAAK,GACLrB,SAAUxB,KAAKwB,SACfjC,MAA6B,kBAAfuC,EAA0BA,EAAa,KAGzDhD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAKC,KAAM,GACX5D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CACIF,IAAK,EACLC,IAAK,GACLzB,aAAca,EAAMD,SACpBe,UAAW,SAAAxD,GAAK,SAAAwB,OAAOxB,EAAP,OAChBG,MAAO,CAAEC,MAAO,QAChBJ,MAAOuC,EACPN,SAAUxB,KAAKwB,oBAtDNhB,aCEnBwC,UAAQ,CAAC,eAAK,eAAK,eAAK,iBAyCfC,EAxCI,SAAAvC,GAAsC,IAApCC,EAAoCD,EAApCC,UAAWM,EAAyBP,EAAzBO,KAAMW,EAAmBlB,EAAnBkB,aAClC,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACZH,EAAAC,EAAAC,cAACkC,EAAD,CACAP,UAAWA,IAEX7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACV+D,EAAME,IAAI,SAACC,EAAEC,GAAH,OACPtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsE,SAAA,KACAvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAekE,GAC9BrE,EAAAC,EAAAC,cAACsE,EAAD,CACItB,SAAUf,EAAKmC,GACfxB,aAAcA,oBCO3B2B,UArBA,SAAA7C,GAAiB,IAAfC,EAAeD,EAAfC,UACb,OACI7B,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACZH,EAAAC,EAAAC,cAACkC,EAAD,CACAP,UAAWA,IAEX7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,kpBAGAH,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACIC,KAAK,UACL/D,MAAO,CAACgE,OAAO,OAAOC,OAAO,OAAOC,WAAW,SAFnD,wCCkDDC,sBA3DX,SAAAA,EAAYhE,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,GAAA/D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KACVH,0EAGD,IAAAiE,EACsB9D,KAAKH,MAAzBc,EADFmD,EACEnD,UAAUoD,EADZD,EACYC,OACjB,OACIjF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACZH,EAAAC,EAAAC,cAACkC,EAAD,CACAP,UAAWA,IAEX7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAqBrE,MAAM,OAAO+D,OAAO,QACrC5E,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACIC,KAAMF,EACNJ,OAAQ,CAAErC,IAAK,GAAIC,MAAO,GAAI2C,KAAM,GAAIC,OAAQ,KAEhDrF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAeI,gBAAgB,QAC/BtF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACIK,QAAQ,UACRC,SAAU,IAGdxF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAEIK,QAAQ,OAERC,SAAU,EACVC,QAAQ,OACRC,QAAS,CAAElD,IAAK,IAChBmD,UAAU,EACVC,UAAU,EACVC,KAAM7F,EAAAC,EAAAC,cAAC4F,EAAD,QAEV9F,EAAAC,EAAAC,cAACgF,EAAA,EAAD,MACAlF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,MACAlF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACIP,KAAK,WACLY,QAAQ,QACRQ,OAAO,UACPC,YAAe,EACfC,IAAK,CAAEF,OAAQ,UAAYC,YAAa,EAAGE,EAAE,QAKzDlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,4pBAjDJuB,cA8DdyE,mLACO,IAAAC,EAGHlF,KAAKH,MADPsF,EAFKD,EAELC,EAAGC,EAFEF,EAEFE,EAAWC,GAFTH,EAECL,OAFDK,EAESG,SAGhB,OACEvG,EAAAC,EAAAC,cAAA,KAAGsG,UAAS,aAAAvE,OAAeoE,EAAf,KAAApE,OAAoBqE,EAApB,MACVtG,EAAAC,EAAAC,cAAA,QAAMmG,EAAG,EAAGC,EAAG,EAAGG,GAAI,EAAGC,WAAW,SAASC,KAAK,QAAQJ,EAAQ9F,eARrDmG,iBCuCRC,6MArGb5D,MAAM,CACFpB,UAAU,CACNiF,MAAM,kCACNjD,OAAO,2DACPkD,OAAO,2BACPC,MAAM,6BAEVF,MAAM,EACNG,OAAO,KACP9E,KAAK,CAAC,GAAG,GAAG,GAAG,GACf8C,OAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACf,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAG1BiC,YAAc,SAACC,GACbtE,EAAKE,SAAS,CACZ+D,MAAOK,EAAEC,OAAO3G,WAGpB4G,aAAe,SAACF,GACdtE,EAAKE,SAAS,CACZkE,OAAQE,EAAEC,OAAO3G,MACjB0B,KAAMU,EAAKI,MAAMd,KAAKiC,IAAI,SAAAC,GAAC,OAAIiD,KAAKC,MAAuB,GAAjBD,KAAKE,iBAGnD1E,aAAe,SAACqE,GACd,IAAMM,EAAK,CAAC,UAAK,WAAM,YACjBC,EAAU7E,EAAKI,MAAMgC,OAAOb,IAAI,SAACC,EAAEC,GAAH,MACpC,CACEqD,QAAQF,EAAKnD,EAAI,GACjBsD,MAAON,KAAKC,MAAuB,IAAjBD,KAAKE,SAAmB,QAG9C3E,EAAKE,SAAS,CACZkC,OAAQyC,OAGZG,YAAc,eAGdC,YAAc,eAGdC,aAAe,qFAIN,IAAAvE,EACmCtC,KAAK+B,MAAvCpB,EADD2B,EACC3B,UAAWM,EADZqB,EACYrB,KAAc8C,GAD1BzB,EACkByD,OADlBzD,EAC0ByB,QACjC,OACEjF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsE,SAAA,KACAvE,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAKC,OAAQ,GAAIsE,QAAS,gBAAiBrD,KAAM,QAE/C3E,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAKC,KAAM,IACT5D,EAAAC,EAAAC,cAAC+H,EAAD,CACIF,aAAgB7G,KAAK6G,iBAK7B/H,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAKC,OAAQ,IACX1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAKC,KAAM,EAAGsE,OAAQ,GACpBlI,EAAAC,EAAAC,cAACiI,EAAD,CACItG,UAAWA,EAAUiF,MACrBI,YAAehG,KAAKgG,YACpBG,aAAgBnG,KAAKmG,aACrBvE,aAAgB5B,KAAK4B,aACrBX,KAAQA,KAGdnC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAKC,KAAM,GACT5D,EAAAC,EAAAC,cAACkI,EAAD,CACEvG,UAAWA,EAAUgC,OACrBf,aAAgB5B,KAAK4B,aACrB+E,YAAe3G,KAAK2G,YACpB1F,KAAQA,KAGZnC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAKC,KAAM,GACT5D,EAAAC,EAAAC,cAACmI,EAAD,CACExG,UAAWA,EAAUkF,OACrBe,YAAe5G,KAAK4G,gBAKxB9H,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAKC,OAAQ,IACb1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAKC,KAAM,GAAIsE,OAAQ,GACrBlI,EAAAC,EAAAC,cAACoI,EAAD,CACErD,OAAQA,EACRpD,UAAWA,EAAUmF,MACrBa,YAAe3G,KAAK2G,wBA7FdnG,aCQE6G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO7I,EAAAC,EAAAC,cAAC4I,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f3fe0eb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7ef7d2c1.png\";","import React from 'react';\nimport { Input } from 'antd';\nimport \"./Navigation.scss\";\nimport logo from '../../asset/logo.png'; \nconst { Search } = Input;\nconst Navigation = () => {\n    return (\n        <div className={\"nav\"}>\n            <div className={\"logo\"}><img src={logo} alt=\"logo\"/></div>\n            <Search\n                placeholder=\"환자이름\"\n                onSearch={value => console.log(value)}\n                style={{ width: 200 }}\n            />\n            <div className={\"dept\"}>진료과: 내분비과</div>\n            <div className={\"docname\"}>주치의/담당의: 000/000</div>\n            <div className={\"worktime\"}>업무일자 2019.02.01 - 2019.05.05</div>\n            <div className={\"record\"}>재원 이력: 2019.01.01 - 재원 중</div>\n        </div>\n    );\n};\n\nexport default Navigation;","import React, { Component } from 'react';\n\nclass Scatter extends Component {\n    constructor(props) {\n        super(props);\n        \n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default Scatter;","import React from 'react';\nimport \"./CardHead.scss\";\n\nconst CardHead = ({cardtitle}) => {\n    return (\n        <div className={'cardhead'}>\n            <div className={'title'}>{cardtitle}</div>\n        </div>\n    );\n};\n\nexport default CardHead;","import React from 'react';\nimport { Select } from 'antd';\nimport Scatter from './Scatter'\nimport CardHead from '../CardHead'\nimport \"./Group.scss\";\n\nconst { Option } = Select;\nfunction handleChange(value) {\n    console.log(`selected ${value}`);\n}\nconst Group = ({cardtitle, rcmd }) => {\n    return (\n        <div className={'cardWrapper'}>\n            <div className={'card'}>\n                <CardHead\n                cardtitle={cardtitle}\n                />\n                <Select defaultValue=\"ALL\" style={{ width: 120, position:\"absolute\", top:'15px', right:'20px' }} onChange={handleChange}>\n                    <Option value=\"0\">그룹A</Option>\n                    <Option value=\"1\">그룹B</Option>\n                    <Option value=\"2\">그룹C</Option>\n                    <Option value=\"3\">그룹D</Option>\n                    <Option value=\"4\">그룹E</Option>\n                    <Option value=\"5\">그룹F</Option>\n                    <Option value=\"6\">그룹G</Option>\n                </Select>\n                <div className=\"plot\">\n                    <Scatter\n                        rcmd ={rcmd}\n                    />\n                </div>\n                <div className=\"info\">\n                    <div className=\"basicinfo\">\n                        <div className=\"name\">이름</div>\n                        <span className=\"gender\">여성</span>\n                        <span className=\"age\">나이</span>\n                    </div>\n                    <div className=\"physical\">\n                        <div className=\"groupnum\">그룹: A</div>\n                        <div className=\"tall\">키: 150</div>\n                        <div className=\"weight\">몸무게: 50</div>\n                    </div>\n                    <div className=\"medical\">\n                        <div className=\"bmi\">BMI: 19</div>\n                        <div className=\"emptybd\">공복혈당: 19</div>\n                        <div className=\"bd\">혈청: 19</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Group;","import React, { Component } from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\nclass EachSlider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: this.props.eachrcmd,\n            marks: {\n              0: '0mg',\n              eachrcmd: '추천값',\n              20: '20mg',\n            }\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n            \n    }\n    componentDidMount() {\n        const { eachrcmd } = this.props;\n        this.setState({\n            marks:{\n                0: '0mg',\n                [eachrcmd] : '추천값'+ eachrcmd,\n                20: '20mg',\n            }\n        });\n    }\n    onChange = value => {\n        this.props.sliderChange();\n        this.setState({\n        inputValue: value,\n        });\n    };\n    \n    render() {\n        const { inputValue, marks } = this.state;\n        return (\n        <Row gutter={24}>\n            <Col span={18}>\n            <Slider\n                marks={marks} \n                defaultValue={marks.eachrcmd}\n                min={0}\n                max={20}\n                onChange={this.onChange}\n                value={typeof inputValue === 'number' ? inputValue : 0}\n            />\n            </Col>\n            <Col span={6}>\n            <InputNumber\n                min={0}\n                max={20}\n                defaultValue={marks.eachrcmd}\n                formatter={value => `${value}mg`}\n                style={{ width: '100%' }}\n                value={inputValue}\n                onChange={this.onChange}\n            />\n            </Col>\n        </Row>\n        );\n    }\n}\n\nexport default EachSlider;\n","import React from 'react';\nimport EachSlider from './EachSlider';\nimport CardHead from '../CardHead'\nimport './SliderCtrl.scss';\n\nconst title = ['아침','점심','저녁','기저'];\nconst SliderCtrl = ({cardtitle, rcmd, sliderChange }) => {\n    return (\n        <div className={'cardWrapper'}>\n            <div className={'card'}>\n                <CardHead\n                cardtitle={cardtitle}\n                />\n                <div className=\"slider\">\n                    {title.map((v,idx)=>(\n                        <>\n                        <div className=\"slidertitle\">{v}</div>\n                        <EachSlider \n                            eachrcmd={rcmd[idx]}\n                            sliderChange={sliderChange}\n                        />\n                        </>\n                    ))}\n                    {/* <div className=\"slidertitle\">아침</div>\n                    <EachSlider \n                        eachrcmd={rcmd[0]}\n\n                    />\n                    <div className=\"slidertitle\">점심</div>\n                    <EachSlider \n                        eachrcmd={rcmd[1]}\n                    />\n                    <div className=\"slidertitle\">저녁</div>\n                    <EachSlider \n                        eachrcmd={rcmd[2]}\n                    />\n                    <div className=\"slidertitle\">기저</div>\n                    <EachSlider \n                        eachrcmd={rcmd[3]}\n                    /> */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SliderCtrl;","import React from 'react';\nimport { Button } from 'antd';\nimport CardHead from '../CardHead'\nimport './Script.scss';\n\nconst Script = ({cardtitle}) => {\n    return (\n        <div className={'cardWrapper'}>\n            <div className={'card'}>\n                <CardHead\n                cardtitle={cardtitle}\n                />\n                <div className=\"scripttxt scroll\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent maximus suscipit neque, eget placerat turpis. Aliquam ac pharetra purus. Sed condimentum felis vel ullamcorper suscipit. Donec tempus arcu lorem. Sed cursus tellus tellus, et congue dui sagittis et. Cras tincidunt semper nulla vel rutrum. Donec condimentum risus non ante egestas, in laoreet odio sodales. Curabitur quam arcu, malesuada ac dignissim vitae, fermentum id diam. Donec finibus urna id justo sollicitudin, nec lobortis nibh mollis. Fusce sollicitudin sed ante a aliquam. Duis sagittis, leo in consectetur bibendum, nulla purus dapibus enim, vel elementum tellus est quis erat.\n                </div>\n                <Button \n                    type=\"primary\" \n                    style={{height:'70px',margin:'10px',fontWeight:'bold'}}\n                >\n                    처방하기\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default Script;","import React, { Component, PureComponent } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer} from 'recharts';\nimport CardHead from '../CardHead'\nimport \"./Graph.scss\";\n\nclass Graph extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {cardtitle,expect} = this.props;\n        return (\n            <div className={'cardWrapper'}>\n                <div className={'card'}>\n                    <CardHead\n                    cardtitle={cardtitle}\n                    />\n                    <div className=\"graphbody\">\n                        <div className=\"linechart\" >\n                        <ResponsiveContainer width='100%' height=\"100%\">\n                            <LineChart \n                                data={expect}\n                                margin={{ top: 20, right: 30, left: 10, bottom: 20 }}\n                            >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis \n                                    dataKey=\"checkAt\"\n                                    interval={0} \n                                    // scale=\"band\"\n                                />\n                                <XAxis \n                                    // allowDuplicatedCategory={false}\n                                    dataKey=\"name\"\n                                    // scale=\"band\"\n                                    interval={0} \n                                    xAxisId='date'\n                                    padding={{ top: 20 }}\n                                    axisLine={false}\n                                    tickLine={false}\n                                    tick={<DateTick />} \n                                />\n                                <YAxis />\n                                <Tooltip />\n                                <Line \n                                    type=\"monotone\" \n                                    dataKey=\"sugar\" \n                                    stroke='#69c0ff'  \n                                    strokeWidth = {2}\n                                    dot={{ stroke: '#69c0ff' , strokeWidth: 2, r:6 }}\n                                />\n                            </LineChart>\n                        </ResponsiveContainer>\n                        </div>\n                        <div className=\"charttxt scroll\">\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent maximus suscipit neque, eget placerat turpis. Aliquam ac pharetra purus. Sed condimentum felis vel ullamcorper suscipit. Donec tempus arcu lorem. Sed cursus tellus tellus, et congue dui sagittis et. Cras tincidunt semper nulla vel rutrum. Donec condimentum risus non ante egestas, in laoreet odio sodales. Curabitur quam arcu, malesuada ac dignissim vitae, fermentum id diam. Donec finibus urna id justo sollicitudin, nec lobortis nibh mollis. Fusce sollicitudin sed ante a aliquam. Duis sagittis, leo in consectetur bibendum, nulla purus dapibus enim, vel elementum tellus est quis erat.\n                        </div>\n                    </div>\n    \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Graph;\n\nclass DateTick extends PureComponent {\n    render() {\n      const {\n        x, y, stroke, payload,\n      } = this.props;\n  \n      return (\n        <g transform={`translate(${x},${y})`}>\n          <text x={0} y={0} dy={0} textAnchor=\"middle\" fill=\"#666\">{payload.value}</text>\n        </g>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport { Navigation, Group, SliderCtrl, Script, Graph } from './components';\nimport { Row, Col } from 'antd';\n\nclass App extends Component {\n  state={\n      cardtitle:{\n          group:'환자군 분류',\n          slider:'인슐린 투여 시나리오',\n          script:'처방하기',\n          graph:'예측 결과'\n      },\n      group:0,\n      person:null,\n      rcmd:[10,13,15,8],\n      expect: [0,0,0,0,0,0,0,0,\n              0,0,0,0,0,0,0,0,\n              0,0,0,0,0,0,0,0],\n  }\nr\n  selectGroup = (e) => {\n    this.setState({\n      group: e.target.value,\n    })\n  }\n  selectPerson = (e) => {\n    this.setState({\n      person: e.target.value,\n      rcmd: this.state.rcmd.map(v => Math.floor(Math.random() * (20))),\n    })\n  }\n  sliderChange = (e) => {\n    const time=['9시','12시','18시'];\n    const newexpect=this.state.expect.map((v,idx)=>(\n      {\n        checkAt:time[idx%3],\n        sugar: Math.floor(Math.random() * (400) + 100)     \n      }\n    ));\n    this.setState({\n      expect: newexpect,\n    })\n  }\n  graphChange = () => {\n\n  }\n  doPrescribe = () => {\n\n  }\n  searchPerson = () => {\n\n  }\n\n  render() {\n    const { cardtitle, rcmd, person, expect }=this.state\n    return (\n      <>\n      <Row gutter={10} justify={\"space-between\"} type={'flex'}>\n        {/* Header */}\n        <Col span={24}>\n          <Navigation\n              searchPerson = {this.searchPerson} \n          />\n        </Col>\n      </Row>\n      {/* Group row */}\n      <Row gutter={10}>\n        <Col span={9} offset={2}>\n          <Group\n              cardtitle={cardtitle.group}\n              selectGroup = {this.selectGroup}\n              selectPerson = {this.selectPerson}\n              sliderChange = {this.sliderChange} \n              rcmd = {rcmd}\n          />\n        </Col>\n        <Col span={7}>\n          <SliderCtrl \n            cardtitle={cardtitle.slider}\n            sliderChange = {this.sliderChange}\n            graphChange = {this.graphChange}\n            rcmd = {rcmd}\n          />\n        </Col>\n        <Col span={4}>\n          <Script \n            cardtitle={cardtitle.script}\n            doPrescribe = {this.doPrescribe}\n          />\n        </Col>\n        </Row>\n        {/* graph row */}\n        <Row gutter={10}>\n        <Col span={20} offset={2}>\n          <Graph \n            expect={expect}\n            cardtitle={cardtitle.graph}\n            graphChange = {this.graphChange}\n          />\n        </Col>\n      </Row>\n      </>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}